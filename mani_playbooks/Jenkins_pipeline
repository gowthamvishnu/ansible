node {
  stage('SCM') {
    git 'https://github.com/spring-petclinic/spring-petclinic-angularjs.git'
  }
  stage('SonarQube analysis') {
    withSonarQubeEnv('sonar') {
      sh 'mvn package sonar:sonar'
    } // SonarQube taskId is automatically attached to the pipeline context
  }
}

note: in fifth line, sonar is the name whaterver u  have given  in the sonarscanner in configuressystem in globaltoolmanagement


------------------------------------------------------------------------------------------------------------------------------



sonar and jenkins in windows

node {
   stage('git'){
       git 'https://github.com/wakaleo/game-of-life.git'

   }

   stage('test-reports')
   {
       junit('gameoflife-web/target/surefire-reports/*.xml')
   }
     stage('SonarQube analysis') {
    withSonarQubeEnv('sonar') {
      bat 'mvn package sonar:sonar'
    }
  }
  
   stage('archieve')
   {
       archiveArtifacts 'gameoflife-web/target/*.war'

   }
  
  
   
}


________________________________________________________________________________
node {
   stage('git'){
       git 'https://github.com/mani5a3/spring-petclinic.git'

   }
   
    stage('build&package')
   {
    sh 'mvn package'
   }
 stage('SonarQube analysis') {
         def scannerHome = tool 'sonarscanner';
                    withSonarQubeEnv('sonarqube') {
                        sh "${scannerHome}/bin/sonar-scanner"
                      '-Dsonar.projectKey=petclinic' +
                                    '-Dsonar.sonar.projectName=petclinic' +
                                    '-Dsonar.sonar.projectVersion=1.0' +
                                '-Dsonar.sonar.login=admin' +
                                 '-Dsonar.sonar.password=admin' +
                                 '-Dsonar.sonar.host.url=http://192.168.33.11:9000' +
                                  '-Dsonar.sonar.sources=/var/lib/jenkins/workspace/sonar'
                                              }
                               }

                               

}

____________________________________________________________________________


pipeline {
agent any 
stages {
stage('git') {
steps {
git 'https://github.com/mani5a3/spring-petclinic.git'
}
}
stage('build') {
steps {
   sh 'mvn package'
}
}

stage('SonarQube analysis'){
steps {

withSonarQubeEnv('sonarqube') {
    
sh "/home/softwares/sonar-scanner-3.3.0.1492-linux/bin/sonar-scanner -Dproject.settings=sonar-project.properties"
                                              }
                               }
}



}

}
